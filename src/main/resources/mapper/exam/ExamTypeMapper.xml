<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.exam.mapper.ExamTypeMapper">
    
    <resultMap type="ExamType" id="ExamTypeResult">
        <result property="id"          column="id"           />
        <result property="typeCode"    column="type_code"    />
        <result property="parentCode"  column="parent_code"  />
        <result property="title"       column="title"        />
        <result property="description" column="description"  />
        <result property="status"      column="status"       />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"  column="create_time"  />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"  column="update_time"  />
        <result property="remark"      column="remark"       />
    </resultMap>

    <sql id="selectExamTypeVo">
        select id, type_code, parent_code, title, description, status, create_by, create_time, update_by, update_time, remark
        from exam_type
    </sql>

    <select id="selectExamTypeList" parameterType="ExamType" resultMap="ExamTypeResult">
        <include refid="selectExamTypeVo"/>
        <where>  
            <if test="typeCode != null  and typeCode != ''"> and type_code = #{typeCode}</if>
            <if test="parentCode != null  and parentCode != ''"> and parent_code = #{parentCode}</if>
            <if test="title != null  and title != ''"> and title like concat('%', #{title}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectExamTypeByTypeId" parameterType="Long" resultMap="ExamTypeResult">
        <include refid="selectExamTypeVo"/>
        where id = #{typeId}
    </select>

    <select id="selectExamTypeByTypeCode" parameterType="String" resultMap="ExamTypeResult">
        <include refid="selectExamTypeVo"/>
        where type_code = #{typeCode}
    </select>
        
    <insert id="insertExamType" parameterType="ExamType" useGeneratedKeys="true" keyProperty="id">
        insert into exam_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeCode != null">type_code,</if>
            <if test="parentCode != null">parent_code,</if>
            <if test="title != null">title,</if>
            <if test="description != null">description,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeCode != null">#{typeCode},</if>
            <if test="parentCode != null">#{parentCode},</if>
            <if test="title != null">#{title},</if>
            <if test="description != null">#{description},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateExamType" parameterType="ExamType">
        update exam_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeCode != null">type_code = #{typeCode},</if>
            <if test="parentCode != null">parent_code = #{parentCode},</if>
            <if test="title != null">title = #{title},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteExamTypeByTypeId" parameterType="Long">
        delete from exam_type where id = #{typeId}
    </delete>

    <delete id="deleteExamTypeByTypeIds" parameterType="String">
        delete from exam_type where id in 
        <foreach item="typeId" collection="array" open="(" separator="," close=")">
            #{typeId}
        </foreach>
    </delete>
</mapper>
